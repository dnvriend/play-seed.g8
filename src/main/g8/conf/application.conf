akka {
 loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = debug
  stdout-loglevel = info
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

actor {
    serialize-messages = off // when on, the akka framework will determine whether or not messages can be serialized, else the plugin

    debug {
      receive = on // log all messages sent to an actor if that actors receive method is a LoggingReceive
      autoreceive = off // log all special messages like Kill, PoisoffPill etc sent to all actors
      lifecycle = off // log all actor lifecycle events of all actors
      fsm = off // enable logging of all events, transitioffs and timers of FSM Actors that extend LoggingFSM
      event-stream = off // enable logging of subscriptions (subscribe/unsubscribe) on the ActorSystem.eventStream
    }
  }

  persistence {
    journal.plugin = "inmemory-journal"
    snapshot-store.plugin = "inmemory-snapshot-store"
  }
}

play.akka.actor-system = "$actor_system_name$"

play.crypto.secret = "changeme"

play.modules.enabled += "$package$.Module"

# Default database configuration
# Default database configuration using H2 database engine in an in-memory mode
db.default.driver=org.h2.Driver
db.default.url="jdbc:h2:mem:play"

play.evolutions.autoApply=true
# Default database configuration using PostgreSQL database engine
#db.default.driver=org.postgresql.Driver
#db.default.url="jdbc:postgresql://database.example.com/playdb"

# Default database configuration using MySQL database engine
# Connect to playdb as playdbuser
#db.default.driver=com.mysql.jdbc.Driver
#db.default.url="jdbc:mysql://localhost/playdb"
#db.default.username=playdbuser
#db.default.password="a strong password"